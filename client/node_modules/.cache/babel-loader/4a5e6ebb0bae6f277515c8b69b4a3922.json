{"ast":null,"code":"import axios from 'axios'; // import { bindActionCreators } from 'redux';\n\nexport const GET_RECIPES = 'GET_RECIPES';\nexport const GET_NAMERECIPES = 'GET_NAMERECIPES';\nexport const SET_NAME = 'SET_NAME';\nexport const GET_TYPES = 'GET_TYPES';\nexport const FILTER_BY_TYPE = 'FILTER_BY_TYPE';\nexport const FILTER_CREATED = 'FILTER_CREATED';\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\nexport const ORDER_BY_SCORE = 'ORDER_BY_SCORE';\nexport const GET_DETAILS = 'GET_DETAILS';\nexport function getRecipes() {\n  return async function (dispatch) {\n    try {\n      var json = await axios(\"http://localhost:3001/recipes\");\n      console.log('action', json.data);\n      return dispatch({\n        type: GET_RECIPES,\n        payload: json.data\n      });\n    } catch {\n      console.log('error en la api');\n    }\n  };\n}\nexport function getNameRecipes(name) {\n  return async function (dispatch) {\n    try {\n      var json = await axios(\"http://localhost:3001/recipes?name=\" + name);\n      return dispatch({\n        type: GET_NAMERECIPES,\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function setFilterName(name) {\n  return {\n    type: SET_NAME,\n    payload: name\n  };\n}\nexport function getTypes() {\n  return async function (dispatch) {\n    try {\n      var info = await axios(\"http://localhost:3001/types\", {});\n      return dispatch({\n        type: GET_TYPES,\n        payload: info.data\n      });\n    } catch {\n      console.log('error api type');\n    }\n  };\n}\nexport async function postNewRecipe(payload) {\n  const response = await axios.post(\"http://localhost:3001/recipe\", payload);\n  return response;\n}\nexport function filterByType(payload) {\n  return {\n    type: FILTER_BY_TYPE,\n    payload\n  };\n}\nexport function filterCreated(payload) {\n  return {\n    type: FILTER_CREATED,\n    payload\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: ORDER_BY_NAME,\n    payload\n  };\n}\nexport function orderByScore(payload) {\n  return {\n    type: ORDER_BY_SCORE,\n    payload\n  };\n}\nexport function getDetail(id) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/recipes/\" + id);\n      return dispatch({\n        type: GET_DETAILS,\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/lihue/OneDrive/Escritorio/foods/FoodsApp/client/src/actions/index.js"],"names":["axios","GET_RECIPES","GET_NAMERECIPES","SET_NAME","GET_TYPES","FILTER_BY_TYPE","FILTER_CREATED","ORDER_BY_NAME","ORDER_BY_SCORE","GET_DETAILS","getRecipes","dispatch","json","console","log","data","type","payload","getNameRecipes","name","error","setFilterName","getTypes","info","postNewRecipe","response","post","filterByType","filterCreated","orderByName","orderByScore","getDetail","id","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n// import { bindActionCreators } from 'redux';\r\nexport const GET_RECIPES = 'GET_RECIPES'\r\nexport const GET_NAMERECIPES = 'GET_NAMERECIPES'\r\nexport const SET_NAME = 'SET_NAME'\r\nexport const GET_TYPES = 'GET_TYPES'\r\nexport const FILTER_BY_TYPE = 'FILTER_BY_TYPE'\r\nexport const FILTER_CREATED = 'FILTER_CREATED'\r\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME'\r\nexport const ORDER_BY_SCORE = 'ORDER_BY_SCORE'\r\nexport const GET_DETAILS = 'GET_DETAILS'\r\n\r\n\r\n\r\nexport function getRecipes() {\r\n    return async function(dispatch){\r\n        try{\r\n            \r\n            var json = await axios(\"http://localhost:3001/recipes\");\r\n            console.log('action', json.data)\r\n            return dispatch({\r\n                type: GET_RECIPES,\r\n                payload: json.data\r\n            })\r\n        } catch{console.log('error en la api')}\r\n    }\r\n}\r\n\r\nexport function getNameRecipes(name){\r\n    \r\n    return async function(dispatch){\r\n        try{\r\n            var json = await axios(\"http://localhost:3001/recipes?name=\"+name);\r\n            return dispatch ({\r\n                type : GET_NAMERECIPES,\r\n                payload: json.data\r\n            })\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setFilterName(name){\r\n    return ({\r\n        type : SET_NAME,\r\n        payload: name\r\n    })\r\n\r\n}\r\n\r\nexport function getTypes(){\r\n    return async function (dispatch) {\r\n        try{\r\n\r\n            var info = await axios(\"http://localhost:3001/types\", {\r\n                \r\n            });\r\n            return dispatch({ \r\n                type: GET_TYPES,\r\n                payload: info.data\r\n            })\r\n        }catch{console.log('error api type')}\r\n    }\r\n}\r\n\r\nexport async function postNewRecipe(payload){\r\n    \r\n    const response = await axios.post(\"http://localhost:3001/recipe\", payload);\r\n    return response;\r\n\r\n}\r\n\r\nexport function filterByType(payload){\r\n    return {\r\n        type: FILTER_BY_TYPE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function filterCreated(payload){\r\n    return{\r\n        type: FILTER_CREATED,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function orderByName(payload){\r\n    return{\r\n        type: ORDER_BY_NAME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function orderByScore(payload){\r\n    return{\r\n        type: ORDER_BY_SCORE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function getDetail(id){\r\n    return async function(dispatch){\r\n        try{\r\n            var json = await axios.get(\"http://localhost:3001/recipes/\"+id);\r\n            return dispatch({\r\n                type: GET_DETAILS,\r\n                payload: json.data\r\n            })\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n }"]},"metadata":{},"sourceType":"module"}